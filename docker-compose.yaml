version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: gofinance-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: gofinance
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5

  redis:
    image: redis:7
    container_name: gofinance-redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]

  rabbitmq:
    image: rabbitmq:3-management
    container_name: gofinance-rabbitmq
    ports:
      - "5672:5672" # porta de comunicação
      - "15672:15672" # interface web do RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
  api:
    build: .
    container_name: gofinance-api
    ports:
      - "8080:8080"
    # env_file:
    # - .env
    environment:
      APP_ENV: development
      APP_PORT: 8080
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: gofinance
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      JWT_SECRET: supersecretkey
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started
    # volumes:
    # - .:/app # Monta o diretório local - removido para não sobrescrever o binário
    restart: unless-stopped # Recomeça caso falhe

volumes:
  pgdata:
